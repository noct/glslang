newaction {
    trigger = "generate",
    description = "Generate glslang_tab.cpp",
    execute = function()
        target_path = path.join("glslang", "MachineIndependent")
        target_d_path = path.join(target_path, "glslang_tab.cpp.h")
        target_t_path = path.join(target_path, "glslang.y")
        target_o_path = path.join(target_path, "glslang_tab.cpp")
        if os.is("windows") then
            bison_path = path.translate(path.join("tools", "bison.exe"))
        else
            bison_path = path.join(os.pathsearch("bison", os.getenv("PATH")), "bison")
        end
        cmd = {
            bison_path,
            "--defines="..path.translate(target_d_path),
            "-t "..path.translate(target_t_path),
            "-o "..path.translate(target_o_path)
        }
        os.execute(table.concat(cmd, " "));
    end
}

newaction {
    trigger = "make-revision",
    description = "Generate glslang/Include/revision.h",
    execute = function()
        desc = os.outputof("git describe --tags --abbrev=0"):gsub('\n', '');
        _, count = os.outputof("git log --oneline"):gsub('\n', '\n')
        date = os.date("%d-%b-%Y")
        file = io.open(_WORKING_DIR.."/glslang/Include/revision.h", "w")
        file:write("// This header is generated by the make-revision script.\n")
        file:write("// For the version, it uses the latest git tag followed by the number of commits.\n")
        file:write("// For the date, it uses the current date (when then script is run).\n")
        file:write('#define GLSLANG_REVISION "'..desc..'"\n')
        file:write('#define GLSLANG_DATE "'..date..'"\n')
    end
}

solution "glslang"
    configurations {"Debug", "Release"}
    platforms {"x64", "x32"}
    location  ("build/" .. _ACTION)
    objdir    ("build/obj" .. _ACTION)
    targetdir ("build/lib/" .. _ACTION)

    project "glslang"
        kind        "StaticLib"
        language    "C++"

        prebuildcommands
        {
            "cd ".._WORKING_DIR,
            _PREMAKE_COMMAND.." generate"
        }

        configuration {"Debug"}
            defines {"DEBUG"}
            flags   {"Symbols"}

        configuration {"Release"}
            defines {"NDEBUG"}
            flags   {"Optimize"}

        configuration {"not vs*"}
            buildoptions {"-std=c++11"}

        configuration {"windows"}
            defines {"GLSLANG_OSINCLUDE_WIN32"}
            files {"glslang/OSDependent/Windows/ossource.cpp"}

        configuration {"linux"}
            defines {"GLSLANG_OSINCLUDE_UNIX"}
            files {"glslang/OSDependent/Unix/ossource.cpp"}

        configuration {}
            files {
                "glslang/Public/*.h",
                "glslang/Include/*.h",
                "glslang/MachineIndependent/**.h",
                "glslang/MachineIndependent/**.cpp",
                "glslang/GenericCodeGen/*.cpp",
                "OGLCompilersDLL/*.cpp",
                "SPIRV/*.h",
                "SPIRV/*.cpp",
            }

    project "glslangValidator"
        kind "ConsoleApp"
        language "C++"
        links {"glslang"}
        files {"StandAlone/StandAlone.cpp"}

        configuration {"linux"}
            links {"pthread"}

    project "spirv-remap"
        kind "ConsoleApp"
        language "C++"
        links {"glslang"}
        files {"StandAlone/spirv-remap.cpp"}

        configuration {"linux"}
            links {"pthread"}
